<?xml version="1.0"?>
<doc>
  <assembly>
    <name>
PLEXOS7_NET.Core
</name>
  </assembly>
  <members>
    <member name="P:PLEXOS7_NET.Core.Connection.InstallPath">
      <summary>
 The path for the current installation of PLEXOS
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Connection.CloseConnection(PLEXOS7_NET.Core.Connection.ConnectionType)">
      <summary>
 CloseConnection
 </summary>
      <param name="DataType">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.Connection(System.String)">
      <summary>
 Connection 
 - takes a string that points to the zip file and establishes a connection with the dataset
 - the dataset and solution file are unzipped to a local directory and loaded 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetModelsToExecute(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
      <summary>
 Gets the list of Models enabled for execution from the current input database
 </summary>
      <param name="strInputFilename">
      </param>
      <param name="strModelList">
      </param>
      <param name="strProjectList">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.Close">
      <summary>
 CloseConnection - this really just cleans up the datafiles used in the query function
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.NewEmptyDatabase(System.String,System.Boolean)">
      <summary>
 Creates an empty input database
 </summary>
      <param name="filePath">The new database will be located at this filepath, , filename must be included</param>
      <param name="overwrite">The new database will override the exist file at this filepath if it is true, else return false if the file exists</param>
      <returns>Return true if new database is created successfully</returns>
      <remarks>
      </remarks>
    </member>
    <member name="P:PLEXOS7_NET.Core.DatabaseCore.InstallPath">
      <summary>
 InstallPath - the installation path of PLEXOS
 </summary>
      <value>
      </value>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetData(System.String,System.String[]@)">
      <summary>
 GetData - get the data of the specified data table (in recordset form)
 </summary>
      <param name="TableName">
      </param>
      <param name="strFields">list of fields that will be removed from the returned data</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddCustomColumn(EEUTILITY.Enums.ClassEnum,System.String,System.String,System.Object)">
      <summary>
 Adds a Custom Column to the specified Class Enum in PLEXOS database
 </summary>
      <param name="nClassId">The Class Enum e.g. <em>ClassEnum.Generator</em></param>
      <param name="nColumnName">The name of the column to be added</param>
      <param name="nObjectName">The Object name that belongs to the specified Class enum e.g. <em>Generator1</em></param>
      <param name="nData">The data for the Custom Column</param>
      <returns>Returns true is the column is successfully added and returns false if fails to add column.
 <para />AddCustomColumn function will return false if the Objectname does not exist, but it will add Custom Column in PLEXOS database. </returns>
      <remarks>Note: The column name would be added at the bottom of the list of Custom Columns.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AppendCustomColumnData(EEUTILITY.Enums.ClassEnum,System.String,System.String,System.Object)">
      <summary>
 Appends data to existing Custom Column in PLEXOS database
 </summary>
      <param name="nClassId">The Class Enum e.g. <em>ClassEnum.Generator</em></param>
      <param name="nColumnName">The Custom Column name</param>
      <param name="nObjectName">The Object name e.g. <em>Generator1</em></param>
      <param name="nData">The Custom Column data</param>
      <returns>Returns true is data is appended successfully and false in case of failure</returns>
      <remarks>Note that the Custom Column data is nullable.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RemoveCustomColumn(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 Removes Custom Column and the data attached to it from PLEXOS database
 </summary>
      <param name="nClassId">The Class enum e.g <em>ClassEnum.Generator</em></param>
      <param name="nColumnName">The name of the Custom Column</param>
      <returns>Returns ture if the Custom Column is deleted successfully and false in case of failure</returns>
      <remarks>Note that all data attached to the Custom Column will be deleted along with the specified Custom Column</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.ObjectId2Name(System.Int32)">
      <summary>
 Returns the name of the object with the specified object_id
 </summary>
      <param name="ObjectId">the object id</param>
      <returns>the name of the object</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.ObjectName2Id(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 Returns the unique object_id associated with the given object class and name.
 </summary>
      <param name="ClassId">
      </param>
      <param name="Name">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetObjects(EEUTILITY.Enums.ClassEnum)">
      <summary>
 Returns a list of objects of a given class type
 </summary>
      <param name="nClassId">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetInputDataSet">
      <summary>
 Returns Input dataset
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddObject(System.String,EEUTILITY.Enums.ClassEnum,System.Boolean,System.String,System.String)">
      <summary>
 AddObject
 </summary>
      <param name="strName">The object name</param>
      <param name="nClassId">The class id</param>
      <param name="bAddSystemMembership">automatically create the system membership</param>
      <param name="strCategory">
      </param>
      <param name="strDescription">
      </param>
      <remarks>A system membership must be created otherwise the dataset will not save</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RemoveObject(System.String,EEUTILITY.Enums.ClassEnum)">
      <summary>
 RemoveObject
 </summary>
      <param name="strName">the name of the object to remove</param>
      <param name="nClassId">the class id of the object</param>
      <returns>one when successful</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RenameObject(System.String,System.String,EEUTILITY.Enums.ClassEnum)">
      <summary>
 RenameObject
 </summary>
      <param name="strOldName">the old name</param>
      <param name="strNewName">the new name</param>
      <param name="nClassId">the class id</param>
      <returns>one when successful</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.UpdateObjectDescription(EEUTILITY.Enums.ClassEnum,System.String,System.String)">
      <summary>
 Updates the description field of the object
 </summary>
      <param name="nClassId">The class of the object</param>
      <param name="strObjectName">The name of the object</param>
      <param name="strNewDescription">The new description</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetObjectsInCategory(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 Gets a list of all objects of a particular class in a cateogry (excluding the default)
 </summary>
      <param name="nClassId">The class enum</param>
      <param name="strCategory">The name of the category</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddCategory(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 AddCategory
 </summary>
      <param name="nClassId">The class enum</param>
      <param name="strCategory">The name of the category</param>
      <returns>Number of affected records</returns>
      <remarks>Failure to add a category will result in a return value of zero</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RemoveCategory(EEUTILITY.Enums.ClassEnum,System.String,System.Boolean)">
      <summary>
 RemoveCategory
 </summary>
      <param name="nClassId">The class enum</param>
      <param name="strCategory">The name of the category</param>
      <param name="bRemoveObjects">Flag for deleting the underlying objects</param>
      <returns>Number of affected records</returns>
      <remarks>Failure to remove a category will result in a return value of zero</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetCategories(EEUTILITY.Enums.ClassEnum)">
      <summary>
 Gets a list of all cateogries of a particular class (excluding the default)
 </summary>
      <param name="nClassId">The class enum</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.CategoryExists(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 Checks to see if a category exists in the input database
 </summary>
      <param name="nClassId">The class enum</param>
      <param name="strCategory">The name of the category</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.CategorizeObject(EEUTILITY.Enums.ClassEnum,System.String,System.String)">
      <summary>
 Move the given object into the specified category
 </summary>
      <param name="nClassId">Class of the object and category to look in</param>
      <param name="strObject">Name of the object to move</param>
      <param name="strCategory">Name of the category to move the object into</param>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetMemberships(EEUTILITY.Enums.CollectionEnum)">
      <summary>
 Returns a list of objects of a given class type
 </summary>
      <param name="nCollectionId">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddMembership(EEUTILITY.Enums.CollectionEnum,System.String,System.String)">
      <summary>
 AddMembership
 </summary>
      <param name="nCollectionId">The collection id</param>
      <param name="strParent">The parent object name</param>
      <param name="strChild">The child object name</param>
      <remarks>Failure to add any will result in a return value of zero</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RemoveMembership(EEUTILITY.Enums.CollectionEnum,System.String,System.String)">
      <summary>
 RemoveMembership
 </summary>
      <param name="nCollectionId">
      </param>
      <param name="strParent">
      </param>
      <param name="strChild">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetMembershipID(EEUTILITY.Enums.CollectionEnum,System.String,System.String)">
      <summary>
 GetMembershipID
 </summary>
      <param name="nCollectionId">
      </param>
      <param name="strParent">
      </param>
      <param name="strChild">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetChildMembers(EEUTILITY.Enums.CollectionEnum,System.String)">
      <summary>
 Gets a list of all child objects associated with a particular collection
 </summary>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetParentMembers(EEUTILITY.Enums.CollectionEnum,System.String)">
      <summary>
 Gets a list of all parent objects associated with a particular collection
 </summary>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddAttribute(EEUTILITY.Enums.ClassEnum,System.String,System.Int32,System.Double)">
      <summary>
 Adds an attribute to the database
 </summary>
      <param name="nClassId">The class enum</param>
      <param name="strObjectName">The object name</param>
      <param name="nAttributeEnum">The attribute enum</param>
      <param name="dValue">
      </param>
      <returns>Number of affected records</returns>
      <remarks>Failure to add an attribute will result in a return value of zero</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RemoveAttribute(EEUTILITY.Enums.ClassEnum,System.String,System.Int32)">
      <summary>
 Removes an attribute from the database
 </summary>
      <param name="nClassId">
      </param>
      <param name="strObjectName">
      </param>
      <param name="nAttributeEnum">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.UpdateAttribute(EEUTILITY.Enums.ClassEnum,System.String,System.Int32,System.Double)">
      <summary>
 Updates an existing attributes value
 </summary>
      <param name="nClassId">
      </param>
      <param name="strObjectName">
      </param>
      <param name="nAttributeEnum">
      </param>
      <param name="dNewValue">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.SetAttributeValue(EEUTILITY.Enums.ClassEnum,System.String,System.Int32,System.Double)">
      <summary>
 Updates an existing attribute value if it exists, otherwise the attribute value will be created
 </summary>
      <param name="nClassId">
      </param>
      <param name="strObjectName">
      </param>
      <param name="nAttributeEnum">
      </param>
      <param name="dValue">
      </param>
      <returns>False if:
 - the object or attribute do not exist
 - <paramref name="dValue" /> is equal to the attribute's default value and a new entry is being created
 </returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetAttributeValue(EEUTILITY.Enums.ClassEnum,System.String,System.Int32,System.Double@)">
      <summary>
 Returns the attribute value by reference
 </summary>
      <param name="nClassId">
      </param>
      <param name="strObjectName">
      </param>
      <param name="nAttributeEnum">
      </param>
      <param name="dValue">
      </param>
      <returns>False = does not exist</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddProperty(System.Int32,System.Int32,System.Int32,System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,EEUTILITY.Enums.PeriodEnum)">
      <summary>
 AddProperty
 </summary>
      <param name="MembershipId">
      </param>
      <param name="EnumId">
      </param>
      <param name="BandId">
      </param>
      <param name="Value">
      </param>
      <param name="DateFrom">
      </param>
      <param name="DateTo">
      </param>
      <param name="Variable">
      </param>
      <param name="DataFile">
      </param>
      <param name="Pattern">
      </param>
      <param name="Scenario">
      </param>
      <param name="Action">
      </param>
      <param name="PeriodTypeId">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RemoveProperty(System.Int32,System.Int32,System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,EEUTILITY.Enums.PeriodEnum)">
      <summary>
 RemoveProperty
 </summary>
      <param name="MembershipId">
      </param>
      <param name="EnumId">
      </param>
      <param name="BandId">
      </param>
      <param name="DateFrom">
      </param>
      <param name="DateTo">
      </param>
      <param name="Variable">
      </param>
      <param name="DataFile">
      </param>
      <param name="Pattern">
      </param>
      <param name="Scenario">
      </param>
      <param name="Action">
      </param>
      <param name="PeriodTypeId">
      </param>
      <returns>returns the number of records removed</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetPropertyValue(System.Int32,System.Int32,System.Int32,System.Double@,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,EEUTILITY.Enums.PeriodEnum)">
      <summary>
 GetPropertyValue
 </summary>
      <param name="MembershipId">
      </param>
      <param name="EnumId">
      </param>
      <param name="BandId">
      </param>
      <param name="Value">
      </param>
      <param name="DateFrom">
      </param>
      <param name="DateTo">
      </param>
      <param name="Variable">
      </param>
      <param name="DataFile">
      </param>
      <param name="Pattern">
      </param>
      <param name="Scenario">
      </param>
      <param name="Action">
      </param>
      <param name="PeriodTypeId">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.PropertyName2EnumId(System.String,System.String,System.String,System.String)">
      <summary>
 Gets the enum_id of the property identified by parent class name, child class name, collection name, and property name, and period type
 </summary>
      <param name="strParentClassName">name of the parent class e.g. "System"</param>
      <param name="strChildClassName">name of the child class e.g. "Generator"</param>
      <param name="strCollectionName">name of the collection e.g. "Generators"</param>
      <param name="strPropertyName">name of the property e.g. "Generation"</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddReportProperty(System.String,System.Int32,EEUTILITY.Enums.SimulationPhaseEnum,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
 Adds a reporting propery to the input database
 </summary>
      <param name="strReportName">
      </param>
      <param name="nReportPropertyId">
      </param>
      <param name="nPhaseId">
      </param>
      <param name="ReportPeriod">
      </param>
      <param name="ReportSummary">
      </param>
      <param name="ReportStatistics">
      </param>
      <param name="ReportSamples">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.ReportPropertyName2EnumId(System.String,System.String,System.String,System.String)">
      <summary>
 Gets the enum_id of the property identified by parent class name, child class name, collection name, and property name, and period type
 </summary>
      <param name="strParentClassName">name of the parent class e.g. "System"</param>
      <param name="strChildClassName">name of the child class e.g. "Generator"</param>
      <param name="strCollectionName">name of the collection e.g. "Generators"</param>
      <param name="strPropertyName">name of the property e.g. "Generation"</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.ReportPropertyName2PropertyId(System.String,System.String,System.String,System.String)">
      <summary>
 Gets the property_id of the property identified by parent class name, child class name, collection name, and property name, and period type
 </summary>
      <param name="strParentClassName">name of the parent class e.g. "System"</param>
      <param name="strChildClassName">name of the child class e.g. "Generator"</param>
      <param name="strCollectionName">name of the collection e.g. "Generators"</param>
      <param name="strPropertyName">name of the property e.g. "Generation"</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetEnabledProperties">
      <summary>
 Returns set of properties names enabled in the dataset
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetPropertiesTable(EEUTILITY.Enums.CollectionEnum,System.String,System.String,System.String,System.String,System.String)">
      <summary>
 Returns filtered collection of properties as a table 
 </summary>
      <param name="CollectionId">
      </param>
      <param name="ParentNameList">
      </param>
      <param name="ChildNameList">
      </param>
      <param name="TimesliceList">
      </param>
      <param name="ScenarioList">
      </param>
      <param name="CategoryList">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.SetBaseUnitType(EEUTILITY.Enums.UnitsofDataEnum,EEUTILITY.Enums.HydroModelEnum)">
      <summary>
 Sets the Base Unit Type and optionaly set Hydro Unit Type in PLEXOS database 
 </summary>
      <param name="nUnitType">The Base Unit Type e.g. <em>Metric/Imperial</em></param>
      <param name="nHydroType">The Hydro Unit Type e.g. <em>Energy/Level/Volume</em></param>
      <returns>Returns true Base Unit Type/Hydro Unit Type is changed successfully and returns false if unsuccessful.</returns>
      <remarks>Connection with PLEXOS Database should be established before calling SetBaseUnitType function.</remarks>
      <exception cref="T:System.NotSupportedException">Hydro unit type [Auto] is not supported by the PLEXOS API</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetBaseUnitType">
      <summary>
 Gets the Base Unit Type in the specified PLEXOS database
 </summary>
      <returns>Returns the Base Unit Type set in the PLEXOS database</returns>
      <remarks>Connection with PLEXOS Database should be established before calling GetBaseUnitType function.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetHydroModelUnitType">
      <summary>
 Gets the Hydro Model Unit Type in the specified PLEXOS database
 </summary>
      <returns>Returns the Hydro Model Unit Type set in the PLEXOS database</returns>
      <remarks>Connection with PLEXOS Database should be established before calling GetBaseUnitType function.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetPropertyDynamic(EEUTILITY.Enums.CollectionEnum,System.Int32,EEUTILITY.Enums.PeriodEnum)">
      <summary>
 Gets given Property Dynamic flag
 </summary>
      <param name="nCollectionId">The Collection Enum e.g.<em>SystemGenerators</em></param>
      <param name="nPropertyEnum">The Property Id</param>
      <param name="nPeriodType">The Period Type Id, default value is: <em>PeriodEnum.Interval</em></param>
      <returns>Returns True if Property Dynamic flag is enabled
 <para> False if Property Dynamic flag is not enabled or Property Id does not exist</para></returns>
      <remarks>Connection with PLEXOS Database should be established before calling GetPropertyDynamic function.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.SetPropertyDynamic(EEUTILITY.Enums.CollectionEnum,System.Int32,System.Boolean,EEUTILITY.Enums.PeriodEnum)">
      <summary>
 Sets the property dynamic flag in PLEXOS database
 </summary>
      <param name="nCollectionId">The Collection Enum e.g. <em>SystemRegions</em></param>
      <param name="nPropertyEnum">The Property Enum</param>
      <param name="bDynamic">The Dynamic flag</param>
      <param name="nPeriodType">The Period Type Id, default value is: <em>PeriodEnum.Interval</em></param>
      <returns>Returns true if successful and returns false if unsuccessful.</returns>
      <remarks>Note: Setting property from Dynamic to Static might loose data.
 <para />Connection with PLEXOS Database should be established before calling SetPropertyDynamic function.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetAllPropertiesDynamic">
      <summary>
 Gets All Properties Dynamic flag from PLEXOS database
 </summary>
      <returns>Return true if All Properties Dynamic flag is set and false if All Properties Dynamic flag is not set</returns>
      <remarks>Connection with PLEXOS Database should be established before calling GetAllPropertiesDynamic function.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.SetAllPropertiesDynamic(System.Boolean)">
      <summary>
 Sets all Properties to Dynamic or Static in PLEXOS database
 </summary>
      <param name="bEnabled">True or False flag</param>
      <returns>Returns True if successful and False in case of failure.</returns>
      <remarks>Note: When All Dynamic configuration is turned off, The Data that are defined with dynamic attributes will remain dynamic along with those that have the Dynamic configuration flag set.
 <para />Other data will be static.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.AddAssembly(System.String,System.String)">
      <summary>
 Add a new assembly reference to the current PLEXOS database
 </summary>
      <param name="strFilePath">File path to the assembly, this can be relative to the PLEXOS database or full file path</param>
      <param name="strNamespace">The namespace to be loaded by the PLEXOS Engine</param>
      <returns>Whether or not the assembly reference was successfully added</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.RemoveAssembly(System.String,System.String)">
      <summary>
 Remove an assembly reference from the current PLEXOS database
 Both the <paramref name="strFilePath" /> and <paramref name="strNamespace" /> must match an existing entry
 </summary>
      <param name="strFilePath">File path to the assembly, this can be relative to the PLEXOS database or full file path</param>
      <param name="strNamespace">The namespace to be loaded by the PLEXOS Engine</param>
      <returns>Whether or not the assembly reference was successfully removed</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.GetAssemblies">
      <summary>
 Get a list of all assembly references in the current PLEXOS database
 </summary>
      <returns>A list of all assemblies, each row has been encoded using CSV rules</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.DatabaseCore.SetAssemblyEnabled(System.String,System.String,System.Boolean)">
      <summary>
 Set the specified row to be enabled or disabled
 Both the <paramref name="strFilePath" /> and <paramref name="strNamespace" /> must match an existing entry
 </summary>
      <param name="strFilePath">File path to the assembly, this can be relative to the PLEXOS database or full file path</param>
      <param name="strNamespace">The namespace to be loaded by the PLEXOS Engine</param>
      <param name="bEnabled">Whether or not the row should be enabled</param>
      <returns>Whether or not the row's enabled state was successfully updated</returns>
    </member>
    <member name="P:PLEXOS7_NET.Core.PLEXOSConnect.FileFilter">
      <summary>
 Sets the file extension filter to be used when upload datasets to the Connect Server
 For a file to be uploaded, the file extension needs to exist in the filter or for the filter to be empty
 </summary>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsConnectionValid">
      <summary>
 Checks if service connection is valid
 </summary>
      <returns>
 Whether or not the connection is valid
 </returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsConnectionExpired">
      <summary>
 Checks if the currently logged in account has expired.
 </summary>
      <returns>
      </returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetServerVersion">
      <summary>
 Request the current version of the PLEXOS Connect Server
 </summary>
      <returns>An integer value representing the Connect Server version (2 or 3)</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.Connection(System.String)">
      <summary>
 Sets the connection string to PLEXOS Connection.
 This is in a SQL format style, for example: Data Source=myServerAddress,port;User Id=myUsername;Password=myPassword;</summary>
      <remarks>
 This can accept mulitple formats:
     HostName+IPv4     : "Data Source=ServerAddress:port;User Id=myUsername;Password=myPassword;"
     HostName+IPv4+IPv6: "Data Source=IPAddress,port;User Id=myUsername;Password=myPassword;"
     IPv4+IPv6         : "Data Source=[IPAddress]:port;User Id=myUsername;Password=myPassword;"
 </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.Close">
      <summary>
 Close the PLEXOS Connect Connection
 </summary>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccount(System.String,System.String,System.Int32)">
      <summary>
 Creates a new account with the specified name
 </summary>
      <param name="strUserName">Name of the new account</param>
      <param name="strPassword">Password for the new account</param>
      <param name="nRights">(Optional) Add this account to one of the default user groups; 0:nothing 1:execute 2:update 4:admin</param>
      <returns>Whether or not the account was successfully created</returns>
      <remarks>
 This function is for creating accounts using PLEXOS Connect 2, to create an account using PLEXOS Connect 3 please use <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccount(System.String,System.String,System.String,System.Int32)" />.
 </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="strUserName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccount(System.String,System.String,System.String,System.Int32)">
      <summary>
 Creates as new account with the specified UserName and Display Name
 </summary>
      <param name="strUserName">Username for the new account, this is used to login, Windows domain based accounts are allowed (ie: 'server\User')</param>
      <param name="strDisplayName">This is the display name of the new account (as shown in Launch Control).</param>
      <param name="strEmail">(Optional) Email address for the user, this is used to auto fill elements in Launch Control (ie, email notifications)</param>
      <param name="nRights">(Optional) Add this account to one of the default user groups; 0:nothing 1:execute 2:update 4:admin</param>
      <returns>Whether or not the account was successfully created</returns>
      <remarks>
 This function is for creating accounts using PLEXOS Connect 3, to create an account using PLEXOS Connect 2 please use <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccount(System.String,System.String,System.Int32)" />.
 This will attempt to convert the rights level used in Connect 2 to the user group system of Connect 3.
 </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="strUserName" /> or <paramref name="strDisplayName" /> contains invalid characters or <paramref name="strEmail" /> is not in a valid email format</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strUserName" /> or <paramref name="strDisplayName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveAccount(System.String)">
      <summary>
 Delete the specified account
 </summary>
      <param name="strUserName">Username of the account to deleted</param>
      <returns>Whether or not the account was deleted</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strUsername" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccounts">
      <summary>
 Retrieve all account usernames
 </summary>
      <returns>List of all account usernames</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckAccountExists(System.String)">
      <summary>
 Check whether or not the account exists
 </summary>
      <param name="strUserName">Username of the account to check for</param>
      <returns>Whether or not the account exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strUsername" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountRights">
      <summary>
 Returns the rights of the currently logged in user if the user is in a default user group
 </summary>
      <returns>Rights level of the current user if the user is in a default user group; 0:nothing 1:execute 2:update 4:admin</returns>
      <remarks>
 This will attempt to convert the user group system of Connect 3 to the rights level used in Connect 2.
 This method is obsolete in PLEXOS Connect 3, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountGroups(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountRights(System.String)">
      <summary>
 Returns the rights of the specified user if the user is in a default user group
 </summary>
      <param name="strUserName">Username of the account to get the rights level of</param>
      <returns>Rights level of the user if the user is in a default user group; 0:nothing 1:execute 2:update 4:admin</returns>
      <remarks>
 This will attempt to convert the user group system of Connect 3 to the rights level used in Connect 2.
 This method is obsolete in PLEXOS Connect 3, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountGroups(System.String)" /></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strUsername" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetAccountRights(System.String,System.Int32)">
      <summary>
 Set the rights level of the specified account
 </summary>
      <param name="strUserName">UserName of the account to modify</param>
      <param name="nRights">Add the account to one of the default user groups; 0:nothing 1:execute 2:update 4:admin</param>
      <returns>Whether the user was removed from any default user groups higher than the specified rights level and added to the specified rights level</returns>
      <remarks>
 This will attempt to convert the rights level used in Connect 2 to the user group system of Connect 3.
 This method is obsolete in PLEXOS Connect 3, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccountGroupMember(System.String,System.String)" /></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strUsername" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccountGroup(System.String,System.String)">
      <summary>
 Create a new user group
 </summary>
      <param name="strName">Name of the group</param>
      <param name="strDescription">Any description to add to the account (optional)</param>
      <returns>Whether or not the group was successfully created</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters or <paramref name="strDescription" /> is too long</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccountGroupMember(System.String,System.String)">
      <summary>
 Add the specified user to the given account group
 </summary>
      <param name="strGroupName">Name of the group</param>
      <param name="strUserName">Username of the account</param>
      <returns>Whether or not the account was successfully added</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccountGroupRole(System.String,System.String)">
      <summary>
 Add the specified role to the given account group
 </summary>
      <param name="strGroupName">Name of the group</param>
      <param name="strRoleName">Name of the role to add</param>
      <returns>Whether or not the role was successfully added</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> or <paramref name="strRoleName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveAccountGroup(System.String)">
      <summary>
 Remove the specified user from the given account group
 </summary>
      <param name="strName">Name of the group</param>
      <returns>Whether or not the group was successfully removed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveAccountGroupMember(System.String,System.String)">
      <summary>
 Remove the specified user from the given account group
 </summary>
      <param name="strGroupName">Name of the group</param>
      <param name="strUserName">Username of the account</param>
      <returns>Whether or not the account was successfully removed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveAccountGroupRole(System.String,System.String)">
      <summary>
 Remove the specified role from the given account group
 </summary>
      <param name="strGroupName">Name of the group</param>
      <param name="strRoleName">Name of the role to add</param>
      <returns>Whether or not the role was successfully removed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> or <paramref name="strRoleName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountGroups">
      <summary>
 Get a list of all account groups
 </summary>
      <returns>String array containing all account group names</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountGroups(System.String)">
      <summary>
 Returns a list of all groups the specified user is apart of
 </summary>
      <param name="strUserName">Username of the account to check</param>
      <returns>List of all groups the user is a member of</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountGroupMembers(System.String)">
      <summary>
 Get a list of all accounts that the specified user group contains
 </summary>
      <param name="strGroupName">Name of the user group to check</param>
      <returns>List of all accounts (by username) in the user group</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountGroupRoles(System.String)">
      <summary>
 Get a list of all user roles that the specified user group contains
 </summary>
      <param name="strGroupName">Name of the user group to check</param>
      <returns>List of all user roles that are included in the user group</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RenameAccountGroup(System.String,System.String)">
      <summary>
 Rename the specified user group.
 </summary>
      <param name="strGroupName">Name of the user group to be renamed</param>
      <param name="strNewName">New name for the user group</param>
      <returns>Whether or not the user group was successfully renamed</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> or <paramref name="strNewName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetAccountGroupDescription(System.String,System.String)">
      <summary>
 Edit the description of the specified user group
 </summary>
      <param name="strGroupName">Name of the user group to modify</param>
      <param name="strDescription">New description to give the user group</param>
      <returns>Whether or not the user group was successfully modified</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strDescription" /> is too long</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroupName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountGroupDescription(System.String)">
      <summary>
 Get the description of the specified user group
 </summary>
      <param name="strName">Name of the group to search for</param>
      <returns>The description of the user group</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddAccountRole(System.String,System.String)">
      <summary>
 Add the specified user to the given account group
 </summary>
      <param name="strName">Name of the group</param>
      <param name="strDescription">Any description to add to the account (optional)</param>
      <returns>Whether or not the group was successfully created</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters or <paramref name="strDescription" /> is too long</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveAccountRole(System.String)">
      <summary>
 Remove the specified user from the given account group
 </summary>
      <param name="strName">Name of the group</param>
      <returns>Whether or not the group was successfully removed</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountRoles">
      <summary>
 Get a list of all account groups
 </summary>
      <returns>String array containing all account group names</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RenameAccountRole(System.String,System.String)">
      <summary>
 Rename the specified user group.
 </summary>
      <param name="strRoleName">Name of the user group to be renamed</param>
      <param name="strNewName">New name for the user group</param>
      <returns>Whether or not the user group was successfully renamed</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRoleName" /> or <paramref name="strNewName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetAccountRoleDescription(System.String,System.String)">
      <summary>
 Edit the description of the specified user group
 </summary>
      <param name="strRoleName">Name of the user group to modify</param>
      <param name="strDescription">New description to give the user group</param>
      <returns>Whether or not the user group was successfully modified</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strDescription" /> is too long</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRoleName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetAccountRoleDescription(System.String)">
      <summary>
 Get the description of the specified user group
 </summary>
      <param name="strName">Name of the group to search for</param>
      <returns>The description of the user group</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveClient(System.String)">
      <summary>
 Remove the given Connect Client from the Connect system
 </summary>
      <param name="strName">Name of the Connect Client to remove</param>
      <returns>Whether or not the specified Connect Client was removed from the system</returns>
      <remarks>Warning: Once removed, the Connect Client will have to be added the server again to reconnect</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClients">
      <summary>
 Gets all of the clients available in PLEXOS Connect
 </summary>
      <returns>A list of all Connect Client (null if failed)</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckClientExists(System.String)">
      <summary>
 Check if the specified Connect Client exists
 </summary>
      <param name="strName">Name of the Connect Client to search for</param>
      <returns>Whether or not the Connect Client exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientStatus(System.String)">
      <summary>
 Retrieve the status of a given Connect Client
 </summary>
      <param name="strName">Name of the Connect Client to check</param>
      <returns>Current status of the Connect Client; 0:Offline 1:Ready 2:Paused 3:Running</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientWorkerCount(System.String)">
      <summary>
 Retrieve the number of workers for the specified Connect Client
 </summary>
      <param name="strName">Name of the Connect Client to check</param>
      <returns>Number of workers or -1 if failed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetClientWorkerCount(System.String,System.Int32)">
      <summary>
 Retrieve the number of workers for the specified Connect Client
 </summary>
      <param name="strName">Name of the Connect Client to check</param>
      <param name="nWorkers">Number of workers the Client will have</param>
      <returns>If the operation was successful</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="nWorkers" /> is equal to or less than 0</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.PauseClient(System.String)">
      <summary>
 Pause the given Connect Client
 </summary>
      <param name="strName">Name of the Connect Client to pause</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.ResumeClient(System.String)">
      <summary>
 Resume the given Connect Client
 </summary>
      <param name="strName">Name of the Connect Client to resume</param>
      <returns>Whether or not is succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientRun(System.String)">
      <summary>
 Retrieve the current run for a give Connect Client. If there is more than one run, this will return the first run found.
 </summary>
      <param name="strName">Name of the Connect Client to check</param>
      <returns>Index of the run (0 if none)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientRuns(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientRuns(System.String)">
      <summary>
 Retrieve the list of runs currently assigned to the specified Connect Client
 </summary>
      <param name="strName">Name of the Connect Client to check</param>
      <returns>List of runs</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientPriority(System.String)">
      <summary>
 Retrieve the priority of the given Connect Client
 </summary>
      <param name="strName">Name of the Connect Client to find</param>
      <returns>The priority of the Connect Client; -1:Custom, 0:High, 1:AboveNormal, 2:Normal(default), 3:BelowNormal, 4:Low</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetClientPriority(System.String,System.Int64)">
      <summary>
 Set the priority of the given Connect Client, use 'SetClientPriorityCustom' to set a custom priority
 </summary>
      <param name="strName">Name of the Connect Client to modify</param>
      <param name="nPriority">Priority level to give the Connect Client; 0:High, 1:AboveNormal, 2:Normal(default), 3:BelowNormal, 4:Low</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="nPriority" /> is set to 'AboveNormal' or 'BelowNormal' and you are connected to a PLEXOS Connect 2 Server, only PLEXOS Connect 3 support these extra values</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetClientPriorityCustom(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
 Set a custom priority level for the given Connect Client, use 'SetClientPriority' to set a non-custom priority
 </summary>
      <param name="strName">Name of the Connect Client to modify</param>
      <param name="nHigh">Number of workers to be considered as high priority</param>
      <param name="nNormal">Number of workers to be considered as normal priority</param>
      <param name="nLow">Number of workers to be considered as low priority</param>
      <returns>Whether of not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The sum of <paramref name="nHigh" />, <paramref name="nNormal" /> and <paramref name="nLow" /> must add up to be equal or less than the total number of workers set for the given Connect Client</exception>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 2 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientProgress(System.String)">
      <summary>
 Get the run progress for the given Connect Client. This will return the progress for the first run found.
 </summary>
      <param name="strName">Name of the Connect Client to search for</param>
      <returns>The progress of the Connect Client, empty (zero-length) if not found or "PROGRESS;[Phase];[Progress];[ModelName];[CurrentModelNumber];[TotalModelCount];"</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunProgress(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientTimeoutSettings">
      <summary>
 Get the Connect Client timeout settings
 </summary>
      <returns>String array containing { IsTimeoutEnabled, TimeoutOption, TimeoutLength } or null if no settings are set</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetClientTimeoutSettings(System.Boolean,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
 Setings the Connect Client timeout
 </summary>
      <param name="bEnabled">Whether or not to enable the timeout option</param>
      <param name="strTimeoutAction">Action to be performed when the timeout is reached (options: STOP, RESTART, FINISH)</param>
      <param name="nTimeoutDays">Number of days in the timeout (min: 0, max: 100)</param>
      <param name="nTimeoutHours">Number of hours in the timeout (min: 0, max: 23)</param>
      <param name="nTimeoutMinutes">Number of minutes in the timeout (min: 0, max: 59)</param>
      <returns>Whether or not the settings were accepted</returns>
      <remarks>If <paramref name="bEnabled" /> is false, then all other arguments are ignored</remarks>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="strTimeoutAction" /> is not one of the following values: STOP, RESTART, FINISH</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters <paramref name="nTimeoutDays" />, <paramref name="nTimeoutHours" /> or <paramref name="nTimeoutMinutes" /> is outside of their allowed range or all add up to less than 10 minutes</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddClientPermission(System.String,System.String)">
      <summary>
 Grant the specified user to have access to the specified Connect Client
 </summary>
      <param name="strClient">Name of the Connect Client</param>
      <param name="strAccount">Name of the account</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strClient" /> or <paramref name="strAccount" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveClientPermission(System.String,System.String)">
      <summary>
 Revoke the specified user's permission to access the specified Connect Client
 </summary>
      <param name="strClient">Name of the Connect Client</param>
      <param name="strAccount">Name of the account</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strClient" /> or <paramref name="strAccount" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckClientPermission(System.String,System.String)">
      <summary>
 Check to see if the given user has permission to access a given client.
 </summary>
      <param name="strClient">Name of the client to check</param>
      <param name="strAccount">Name of the account to check</param>
      <returns>Whether or not the user has permission to access the client</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strClient" /> or <paramref name="strAccount" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetClientPermissions(System.String)">
      <summary>
 Get all accounts with permissions to access the Connect Client
 </summary>
      <param name="strClient">Connect Client to search for</param>
      <returns>List of all account names with access to the Connect Client (null if failed or Connect Client not found)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strClient" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddGroup(System.String)">
      <summary>
 Add a new Client Group
 </summary>
      <param name="strName">Name to give the Client Group</param>
      <returns>Whether or not the Client Group has been successfully added</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveGroup(System.String)">
      <summary>
 Removes the specified Client Group
 </summary>
      <param name="strName">Name of the Client Group to remove</param>
      <returns>Whether or not it has been successfully removed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetGroups">
      <summary>
 Retrieves a list of all Client Groups
 </summary>
      <returns>List of Client Group names (null if failed)</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckGroupExists(System.String)">
      <summary>
 Check if the specified Client Group exist
 </summary>
      <param name="strName">Name of the Client Group to search for</param>
      <returns>Whether or not the Client Group exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddGroupMember(System.String,System.String)">
      <summary>
 Add the client to the Client Group
 </summary>
      <param name="strGroup">Name of the Client Group to add to</param>
      <param name="strClient">Name of the client to add to the Client Group</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroup" /> or <paramref name="strClient" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveGroupMember(System.String,System.String)">
      <summary>
 Remove the client from the Client Group
 </summary>
      <param name="strGroup">Name of the Client Group to remove the client from</param>
      <param name="strClient">Name of the client to remove from the Client Group</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strGroup" /> or <paramref name="strClient" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetGroupMembers(System.String)">
      <summary>
 Retrieve the list of Connect Clients for the given Client Group
 </summary>
      <param name="strName">Name of the Client Group to find all its members</param>
      <returns>List of Connect Clients names (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddEngine(System.String)">
      <summary>
 (PLEXOS Dashboard compatibility) Uploads the PLEXOS Engine and returns the automatically generated name
 </summary>
      <param name="strSource">Source zip file of the PLEXOS Engine on the local machine</param>
      <returns>The name of the PLEXOS Engine (empty if it failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strSource" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="strSource" /> does not exist, the path is invalid or the caller does not have permission to access the file</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddEngine(System.String,System.String)">
      <summary>
 Uploads a new PLEXOS Engine to the Connect Server from the local machine
 </summary>
      <param name="strName">Name to give the PLEXOS Engine</param>
      <param name="strSource">Source zip file of the PLEXOS Engine on the local machine</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> or <paramref name="strSource" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="strSource" /> does not exist, the path is invalid or the caller does not have permission to access the file</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveEngine(System.String)">
      <summary>
 Remove the PLEXOS Engine from Connect
 </summary>
      <param name="strName">Name of the PLEXOS Engine to remove</param>
      <returns>Whether or not the operation succeeded</returns>
      <remarks>
 This does not permanently remove the PLEXOS Engine, instead the PLEXOS Engine is put in a deleted engine list.
 To permanently deleted the PLEXOS Engine, call this then call ExpungeEngine
 </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RestoreDeletedEngine(System.String)">
      <summary>
 Restore a deleted PLEXOS Engine (finds most recent match)
 </summary>
      <param name="strName">Deleted PLEXOS Engine name to restore</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.ExpungeDeletedEngine(System.String)">
      <summary>
 Permanently remove the specified deleted PLEXOS Engine and deletes the PLEXOS Engine file (finds most recent match)
 </summary>
      <param name="strName">Name of the deleted PLEXOS Engine to remove</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetEngines">
      <summary>
 Gets all of the PLEXOS Engines available in PLEXOS Connect
 </summary>
      <returns>A list of all PLEXOS Engines (null if failed)</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDeletedEngines">
      <summary>
 Gets all of the deleted PLEXOS Engines available in PLEXOS Connect
 </summary>
      <returns>List of PLEXOS Engine names (null if failed, may have duplicated names)</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckEngineExists(System.String)">
      <summary>
 Check if the specified PLEXOS Engine exists
 </summary>
      <param name="strName">Name of the PLEXOS Engine to search for</param>
      <returns>Whether or not the PLEXOS Engine exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckEngineExists(System.Int32,System.Int32,System.Int32)">
      <summary>
 Check if the specified PLEXOS Engine version exists
 </summary>
      <param name="nMajorVersion">Major version number (ie '7' for 7.5R01)</param>
      <param name="nMinorVersion">Minor version number (ie '500' for 7.5R01)</param>
      <param name="nRevision">Release number (ie '1' for 7.5R01 )</param>
      <returns>The engine name (empty if not found)</returns>
      <exception cref="T:System.NotSupportedException">The PLEXOS Connect 2 Server does not support PLEXOS Engine version checking, only PLEXOS Connect 3.</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetEngineTimeStamp(System.String)">
      <summary>
 Get the timestamp of the given PLEXOS Engine
 </summary>
      <param name="strName">Name of the PLEXOS Engine to find</param>
      <returns>The date and time the PLEXOS Engine was uploaded (see <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> for DateTime formatting)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDeletedEngineTimeStamp(System.String)">
      <summary>
 Retrieve the deleted PLEXOS Engine's created date and time (finds most recent match)
 </summary>
      <param name="strName">Name of the deleted PLEXOS Engine to search for</param>
      <returns>Time of the PLEXOS Engine's uploading to the Connect server (see <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> for DateTime formatting)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsEngineX64(System.String)">
      <summary>
 Test if the specified PLEXOS Engine is a 64bit version
 </summary>
      <param name="strName">Name of the PLEXOS Engine to check</param>
      <returns>Whether or not the specified PLEXOS Engine is x64</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsEngineLinux(System.String)">
      <summary>
 Test if the specified PLEXOS Engine is a linux version
 </summary>
      <param name="strName">Name of the PLEXOS Engine to check</param>
      <returns>Whether or not the specified PLEXOS Engine is linux</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RenameEngine(System.String,System.String)">
      <summary>
 Rename an existing PLEXOS Engine, this will update all references (except for running or completed runs)
 </summary>
      <param name="strEngineName">Current name of the PLEXOS Engine</param>
      <param name="strNewName">New name you wish to give the PLEXOS Engine</param>
      <returns>If the name change succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strEngineName" /> or <paramref name="strNewName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CopyEngine(System.String,System.String)">
      <summary>
 Copy an existing PLEXOS Engine
 </summary>
      <param name="strEngineName">Name of the existing PLEXOS Engine to copy</param>
      <param name="strNewName">Name of the PLEXOS Engine to be created</param>
      <returns>Whether or not the operation was successful</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strEngineName" /> or <paramref name="strNewName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DownloadEngine(System.String,System.String)">
      <summary>
 Downloads the given PLEXOS Engine to the local computer
 </summary>
      <param name="strName">Name of the PLEXOS Engine to retrieve from the server</param>
      <param name="strDestination">Local destination to download to</param>
      <returns>If the download succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> or <paramref name="strDestination" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DownloadDeletedEngine(System.String,System.String)">
      <summary>
 Download a specified deleted PLEXOS Engine to the destination on the local machine (finds most recent match)
 </summary>
      <param name="strName">Name of the deleted PLEXOS Engine to download</param>
      <param name="strDestination">Destination on the local machine to download to</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> or <paramref name="strDestination" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddFolder(System.String)">
      <summary>
 Add a new Dataset Folder to the specified path. The parent folder must exist for this operation to succeed.
 </summary>
      <param name="strNewFolder">Full folder path to create</param>
      <returns>Whether or not the Dataset Folder was created</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewFolder" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strNewFolder" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddDatasetFolder(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddDatasetFolder(System.String)">
      <summary>
 Add a new Dataset Folder to the specified path. The parent folder must exist for this operation to succeed.
 </summary>
      <param name="strFolderPath">Full folder path to create</param>
      <returns>Whether or not the Dataset Folder was created</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strFolderPath" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveFolder(System.String)">
      <summary>
 Remove the specified empty folder.
 Note: Can't deleted the folder if anything is contained inside it
 </summary>
      <param name="strFolderPath">Full path to the folder</param>
      <returns>Whether or not the operation succeeded</returns>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveDatasetFolder(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveDatasetFolder(System.String)">
      <summary>
 Deletes an empty Dataset Folder from the given path.
 Note: Can't deleted the folder if anything is contained inside it
 </summary>
      <param name="strFolderPath">Full folder path of the Dataset Folder to remove. This folder must be empty.</param>
      <returns>Whether or not the folder was successfully deleted</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" />
      </exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetFolders(System.String)">
      <summary>
 Returns the names of Dataset Folders in the specified path
 </summary>
      <param name="strFolderPath">Full folder path to search within (empty string for root directory)</param>
      <returns>List of all Dataset Folders contained within the spcified path</returns>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetFolders(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetFolders(System.String)">
      <summary>
 Returns the names of Dataset Folders in the specified path
 </summary>
      <param name="strFolderPath">Full folder path to search within (empty string for root directory)</param>
      <returns>List of all Dataset Folders contained within the spcified path</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckFolderExists(System.String)">
      <summary>
 Check if the given folder path exists.
 </summary>
      <param name="strFolderPath">Full folder path to check for</param>
      <returns>Whether of not the folder path exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckDatasetFolderExists(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckDatasetFolderExists(System.String)">
      <summary>
 Check if the given folder path exists.
 </summary>
      <param name="strFolderPath">Full folder path to check for</param>
      <returns>Whether of not the folder path exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddFolderPermission(System.String,System.String)">
      <summary>
 Add the specified account to the Dataset Folder's permission list.
 Note: This does not check all Dataset Folders in the given path, only the last Dataset Folder in the path.
 </summary>
      <param name="strFolderPath">Full folder path that the account will be added to</param>
      <param name="strUserName">Username of the account to be added to the folder's permission list</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddDatasetFolderPermission(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddDatasetFolderPermission(System.String,System.String)">
      <summary>
 Add the specified account to the Dataset Folder's permission list.
 Note: This does not check all Dataset Folders in the given path, only the last Dataset Folder in the path.
 </summary>
      <param name="strFolderPath">Full folder path that the account will be added to</param>
      <param name="strUserName">Username of the account to be added to the folder's permission list</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveFolderPermission(System.String,System.String)">
      <summary>
 Remove the specified account to the Dataset Folder's permission list.
 Note: This does not check all Dataset Folders in the given path, only the last Dataset Folder in the path.
 </summary>
      <param name="strFolderPath">Full folder path that the account will be removed from</param>
      <param name="strUserName">Username of the account to be removed from the folder's permission list</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveDatasetFolderPermission(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveDatasetFolderPermission(System.String,System.String)">
      <summary>
 Remove the specified account to the Dataset Folder's permission list.
 Note: This does not check all Dataset Folders in the given path, only the last Dataset Folder in the path.
 </summary>
      <param name="strFolderPath">Full folder path that the account will be removed from</param>
      <param name="strUserName">Username of the account to be removed from the folder's permission list</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetFolderPermissions(System.String)">
      <summary>
 Retrieve the accounts with permission to access the given folder, this will be an empty list if everyone has access.
 </summary>
      <param name="strFolderPath">Full path of the folder to search for</param>
      <returns>List of all account usernames that have permission to access the folder (empty if everyone has access and null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetFolderPermissions(System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetFolderPermissions(System.String)">
      <summary>
 Retrieve the accounts with permission to access the given folder, this will be an empty list if everyone has access.
 </summary>
      <param name="strFolderPath">Full path of the folder to search for</param>
      <returns>List of all account usernames that have permission to access the folder (empty if everyone has access and null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckFolderPermission(System.String,System.String)">
      <summary>
 Check if the specified username has permission to access the given Dataset Folder path.
 Note: This check access to the entire path.
 </summary>
      <param name="strFolderPath">Full folder path to check (can not be empty)</param>
      <param name="strUserName">Name of the user to check (empty for current user)</param>
      <returns>Whether or not the permission rule exists</returns>
      <remarks>
 The logged in user will need permission to the folder inorder to check if another user has access.
 This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckDatasetFolderPermission(System.String,System.String)" /></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckDatasetFolderPermission(System.String,System.String)">
      <summary>
 Check if the specified username has permission to access the given Dataset Folder path.
 Note: This check access to the entire path.
 </summary>
      <param name="strFolderPath">Full folder path to check (can not be empty)</param>
      <param name="strUserName">Name of the user to check (empty for current user)</param>
      <returns>Whether or not the permission rule exists</returns>
      <remarks>The logged in user will need permission to the folder inorder to check if another user has access</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddDataset(System.String,System.String)">
      <summary>
 Adds a dataset to the Connect repository
 </summary>
      <param name="strFolderPath">Full folder path to create the dataset within</param>
      <param name="strName">Name to give the new dataset</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveDataset(System.String,System.String)">
      <summary>
 Remove the dataset from Connect
 </summary>
      <param name="strFolderPath">Full folder path of the folder that contains the dataset</param>
      <param name="strName">Name of the dataset to remove</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasets(System.String)">
      <summary>
 Gets all of the Datasets available in PLEXOS Connect for the specified Dataset Folder
 </summary>
      <param name="strFolderPath">The folder path to search in (empty for root folder)</param>
      <returns>A list of all Datasets (null if failed or folder doesn't exist)</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckDatasetExists(System.String,System.String)">
      <summary>
 Checks whether or not the specified dataset exists in the specified folder
 </summary>
      <param name="strFolderPath">Full folder path of the dataset (empty for root folder)</param>
      <param name="strName">Name of the dataset to check for</param>
      <returns>Whether or not the dataset exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckOutDataset(System.String,System.String)">
      <summary>
 Checkout dataset using the current account
 </summary>
      <param name="strFolderPath">Full folder path of the folder containing the dataset</param>
      <param name="strName">Name of the dataset to checkout</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckInDataset(System.String,System.String)">
      <summary>
 Checkin the dataset using the current account
 Note: Current user must have checked the dataset out
 </summary>
      <param name="strFolderPath">Full folder path of the folder containing the dataset</param>
      <param name="strName">Name of the dataset to checkin</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RenameDataset(System.String,System.String,System.String)">
      <summary>
 Rename an existing dataset
 </summary>
      <param name="strFolderPath">Full folder path of the folder containing the dataset</param>
      <param name="strOldName">Name of the dataset to rename</param>
      <param name="strNewName">New name to give the dataset</param>
      <returns>Whether or not the operation was successful</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strOldName" /> or <paramref name="strNewName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.InvalidOperationException">The parameters <paramref name="strOldName" /> and <paramref name="strNewName" /> have the same value.</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CopyDataset(System.String,System.String,System.String,System.String)">
      <summary>
 Copy an exisiting dataset to the specified folder
 </summary>
      <param name="strSourcePath">Full folder path of the Dataset Folder containing the original Dataset</param>
      <param name="strSourceDataset">Name of the Dataset to copy</param>
      <param name="strDestinationPath">Full folder path of the Dataset Folder to copy the original Dataset to</param>
      <param name="strNewDataset">Name to give the new Dataset</param>
      <returns>Whether or not the operation was successful</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewDataset" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strSourceDataset" /> or <paramref name="strNewDataset" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DownloadDataset(System.String,System.String,System.String)">
      <summary>
 Downloads the dataset (and all of its versions) from PLEXOS Connect to the specified location
 </summary>
      <param name="strDestination">Folder path to download to on the local machine (the destination folder must already exist)</param>
      <param name="strFolderPath">Full folder path to search within</param>
      <param name="strDatasetName">Name of the dataset to download</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="strDestination" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddDatasetVersion(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
 Uploads a new dataset with specific version
 </summary>
      <param name="strSourcePath">Location of files on the local machine</param>
      <param name="strDatasetPath">Full folder path of the dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to save the version in</param>
      <param name="strNewVersion">Name to give the new version</param>
      <param name="strBaseVersion">(Optional) Specify the name of a Dataset Version if the new Dataset Version needs to share files with the specified base Dataset Version</param>
      <param name="bSearchTop">Whether to search in top level directory or all sub folders</param>
      <returns>Whether or not the new version was successfully created</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewVersion" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" />, <paramref name="strNewVersion" /> or <paramref name="strSourcePath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The folder <paramref name="strSourcePath" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddDatasetVersion(PLEXOS7_NET.Core.PLEXOSConnect.PLEXOSDatabase,System.String,System.String,System.String)">
      <summary>
 (PLEXOS Dashboard compatibility) Uploads a new dataset with the specific PLEXOS database
 </summary>
      <param name="oDatabase">Custom database details</param>
      <param name="strDatasetPath">Full folder path of the dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to save the version in</param>
      <param name="strBaseVersion">(Optional) Specify the name of a Dataset Version if the new Dataset Version needs to share files with the specified base Dataset Version</param>
      <returns>Name of the new version that was created (empty if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oDatabase" />, <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveDatasetVersion(System.String,System.String,System.String)">
      <summary>
 Remove the version from the dataset
 </summary>
      <param name="strFolderPath">Full folder path of the dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to remove</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RestoreDeletedDatasetVersion(System.String,System.String,System.String)">
      <summary>
 Restore the deleted version to allow it to be used again (finds most recent match)
 </summary>
      <param name="strFolderPath">Full folder path of the dataset (empty for root)</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to find</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.ExpungeDeletedDatasetVersion(System.String,System.String,System.String)">
      <summary>
 Permanently remove the specified version and deletes the version files (finds most recent match)
 </summary>
      <param name="strFolderPath">Full folder path of the dataset (empty for root)</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to find</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetVersions(System.String,System.String)">
      <summary>
 Gets all of the Dataset Versions available in PLEXOS Connect for the specified Dataset
 </summary>
      <param name="strFolderPath">Full folder path of the folder that contains the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <returns>List of all versions found (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDeletedDatasetVersions(System.String,System.String)">
      <summary>
 Gets all of the deleted Dataset Versions available in PLEXOS Connect for the specified Dataset
 </summary>
      <param name="strFolderPath">Full folder path of the dataset location (empty for root)</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <returns>List of all deleted versions within the specified dataset (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetLatestVersion(System.String,System.String)">
      <summary>
 Queries PLEXOS Connect for the latest dataset version
 </summary>
      <param name="strFolderPath">Full folder path of the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <returns>Name of the latest version</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetFiles(System.String,System.String,System.String)">
      <summary>
 Gets all of the file and folder entries available in the specified Dataset Version (this does not check base versions)
 </summary>
      <param name="strFolderPath">Full folder path containing the Dataset</param>
      <param name="strDatasetName">Name of the Dataset</param>
      <param name="strVersion">Name of the Version to retrieve the file entries from</param>
      <returns>A list of files contained inside the Dataset Version (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetVersionFiles(System.String,System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetVersionFiles(System.String,System.String,System.String)">
      <summary>
 Gets all of the file and folder entries available in the specified Dataset Version (this does not check base versions)
 </summary>
      <param name="strFolderPath">Full folder path containing the Dataset</param>
      <param name="strDatasetName">Name of the Dataset</param>
      <param name="strVersion">Name of the Version to retrieve the file entries from</param>
      <returns>A list of files contained inside the Dataset Version (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckDatasetVersionExists(System.String,System.String,System.String)">
      <summary>
 Check if the specified version exists in the specified dataset
 </summary>
      <param name="strFolderPath">Full folder path of the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to search for</param>
      <returns>Whether or not the version exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetVersionTimeStamp(System.String,System.String,System.String)">
      <summary>
 Retrieve the time stamp of the dataset version
 </summary>
      <param name="strFolderPath">Full folder path of the folder that contains the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to search for</param>
      <returns>Date and time the version was created (see <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> for DateTime formatting)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetVersionBase(System.String,System.String,System.String)">
      <summary>
 Retrieve the base version of the specified dataset version
 </summary>
      <param name="strFolderPath">Full folder path of the folder that contains the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to search for</param>
      <returns>Name of the base version or empty string if none</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDatasetVersionAccount(System.String,System.String,System.String)">
      <summary>
 Retrieve the display name for the account that created the Dataset Version
 </summary>
      <param name="strFolderPath">Full folder path of the folder that contains the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to search for</param>
      <returns>Dispaly Name of the account that created the version</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDeletedDatasetVersionBase(System.String,System.String,System.String)">
      <summary>
 Retrieve the base version for the specified deleted dataset version (finds most recent match)
 </summary>
      <param name="strFolderPath">Full folder path of the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to find</param>
      <returns>Name of the base version (empty if none)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDeletedDatasetVersionTimeStamp(System.String,System.String,System.String)">
      <summary>
 Retrieve the upload time of the deleted dataset version (finds most recent match)
 </summary>
      <param name="strFolderPath">Full folder path of the dataset location</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to find</param>
      <returns>Date and time of when the version was uploaded (see <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> for DateTime formatting)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDeletedDatasetVersionAccount(System.String,System.String,System.String)">
      <summary>
 Retrieve the display name for the account that created the Dataset Version (finds most recent match)
 </summary>
      <param name="strFolderPath">Full folder path of the folder that contains the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to search for</param>
      <returns>Dispaly Name of the account that created the version</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DownloadDatasetVersion(System.String,System.String,System.String,System.String)">
      <summary>
 Downloads the dataset version from PLEXOS Connect to the specified location
 </summary>
      <param name="strDestination">Folder path to download to on the local machine (folder must already exist)</param>
      <param name="strFolderPath">Full folder path to search within</param>
      <param name="strDatasetName">Name of the dataset to look within</param>
      <param name="strVersion">Name of the version to download</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDestination" />, <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="strDestination" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DownloadDeletedDatasetVersion(System.String,System.String,System.String,System.String)">
      <summary>
 Download the deleted dataset version to the local machine (finds most recent match)
 </summary>
      <param name="strFolderPath">Full folder path of the dataset</param>
      <param name="strDatasetName">Name of the dataset to search within</param>
      <param name="strVersion">Name of the version to find</param>
      <param name="strDestination">Destination on the local machine to download to</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDestination" />, <paramref name="strDatasetName" /> or <paramref name="strVersion" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJobsetFolder(System.String)">
      <summary>
 Add a new Jobset Folder to the specified path. The parent folder must exist for this operation to succeed.
 </summary>
      <param name="strFolderPath">Full folder path to create</param>
      <returns>Whether or not the Jobset Folder was created</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strFolderPath" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJobsetFolder(System.String)">
      <summary>
 Deletes an empty Jobset Folder from the given path.
 </summary>
      <param name="strFolderPath">Full folder path of the Jobset Folder to remove. This folder must be empty.</param>
      <returns>Whether or not the folder was successfully deleted</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" />
      </exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobsetFolders(System.String)">
      <summary>
 Returns the names of Jobset Folders in the specified path
 </summary>
      <param name="strFolderPath">Full folder path to search within (empty string for root directory)</param>
      <returns>List of all Jobset Folders contained within the spcified path</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckJobsetFolderExists(System.String)">
      <summary>
 Check if the given folder path exists.
 </summary>
      <param name="strFolderPath">Full folder path to check for</param>
      <returns>Whether of not the folder path exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJobsetFolderPermission(System.String,System.String)">
      <summary>
 Add the specified account to the Jobset Folder's permission list.
 Note: This does not check all Jobset Folders in the given path, only the last Jobset Folder in the path.
 </summary>
      <param name="strFolderPath">Full folder path that the account will be added to</param>
      <param name="strUserName">Username of the account to be added to the folder's permission list</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 2 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJobsetFolderPermission(System.String,System.String)">
      <summary>
 Remove the specified account to the Jobset Folder's permission list.
 Note: This does not check all Jobset Folders in the given path, only the last Jobset Folder in the path.
 </summary>
      <param name="strFolderPath">Full folder path that the account will be removed from</param>
      <param name="strUserName">Username of the account to be removed from the folder's permission list</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> or <paramref name="strUserName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 2 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobsetFolderPermissions(System.String)">
      <summary>
 Retrieve the accounts with permission to access the given folder, this will be an empty list if everyone has access.
 </summary>
      <param name="strFolderPath">Full path of the folder to search for</param>
      <returns>List of all account usernames that have permission to access the folder (empty if everyone has access and null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 2 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckJobsetFolderPermission(System.String,System.String)">
      <summary>
 Check if the specified username has permission to access the given Jobset Folder path.
 Note: This check access to the entire path.
 </summary>
      <param name="strFolderPath">Full folder path to check (can not be empty)</param>
      <param name="strUserName">Name of the user to check (empty for current user)</param>
      <returns>Whether or not the permission rule exists</returns>
      <remarks>The logged in user will need permission to the folder inorder to check if another user has access</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strFolderPath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 2 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJobset(System.String)">
      <summary>
 Adds a Jobset in the root directory
 </summary>
      <param name="strName">Name to give the new Jobset</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJobset(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJobset(System.String,System.String)">
      <summary>
 Adds a Jobset to the specified Jobset Folder (empty for root)
 </summary>
      <param name="strFolderPath">Full folder path to create the Jobset within (empty for root directory)</param>
      <param name="strName">Name to give the new Jobset</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJobset(System.String)">
      <summary>
 Removes a Jobset from the root directory
 </summary>
      <param name="strName">Name to give the new Jobset</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJobset(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJobset(System.String,System.String)">
      <summary>
 Removes a Jobset from the specified Jobset Folder (empty for root)
 </summary>
      <param name="strFolderPath">Full folder path to create the Jobset within</param>
      <param name="strName">Name to give the new Jobset</param>
      <returns>Whether or not the operation has succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJobsetPermission(System.String,System.String)">
      <summary>Add a new jobset permission to the specified jobset</summary>
      <returns>Always returns false</returns>
      <remarks>Jobset Permissions have been removed in Connect 3.0 in favour of Jobset Folder Permissions. See <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJobsetFolderPermission(System.String,System.String)" /></remarks>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 3 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJobsetPermission(System.String,System.String)">
      <summary>Remove a permission from the specified jobset</summary>
      <returns>Always returns false</returns>
      <remarks>Jobset Permissions have been removed in Connect 3.0 in favour of Jobset Folder Permissions. See <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJobsetFolderPermission(System.String,System.String)" /></remarks>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 3 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobsetPermissions(System.String)">
      <summary>Retrieve the accounts with permission to access the given jobset</summary>
      <returns>Always returns null</returns>
      <remarks>Jobset Permissions have been removed in Connect 3.0 in favour of Jobset Folder Permissions. See <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobsetPermissions(System.String)" /></remarks>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 3 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckJobsetPermission(System.String,System.String)">
      <summary>Check if the specified user has access to the specified jobset</summary>
      <returns>Always returns false</returns>
      <remarks>Jobset Permissions have been removed in Connect 3.0 in favour of Jobset Folder Permissions. See <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckJobsetPermission(System.String,System.String)" /></remarks>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 3 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobsets(System.String)">
      <summary>
 Gets all of the Jobsets available in PLEXOS Connect for the specified Jobset Folder
 </summary>
      <param name="strFolderPath">The folder path to search in (empty for root folder)</param>
      <returns>A list of all Jobsets (null if failed or folder doesn't exist)</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckJobsetExists(System.String)">
      <summary>
 Check if the specified Jobset exists in the root Jobset Folder
 </summary>
      <param name="strName">Name of the Jobset to search for</param>
      <returns>Whether or not the Jobset exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckJobsetExists(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CheckJobsetExists(System.String,System.String)">
      <summary>
 Check if the specified Jobset exists in the specified Jobset Folder (empty for root)
 </summary>
      <param name="strFolderPath">Full folder path to search for the Jobset in</param>
      <param name="strName">Name of the Jobset to search for</param>
      <returns>Whether or not the Jobset exists</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IncreaseJobsetPriority(System.String)">
      <summary>
 Increase the priority of all Jobs contained within the specified Jobset
 </summary>
      <param name="strName">Name of the Jobset to search for</param>
      <returns>Whether or not the Jobset was updated</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.IncreaseJobsetPriority(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IncreaseJobsetPriority(System.String,System.String)">
      <summary>
 Increase the priority of all Jobs contained within the specified Jobset
 </summary>
      <param name="strFolderPath">Full folder path to search for the Jobset in</param>
      <param name="strName">Name of the Jobset to search for</param>
      <returns>Whether or not the Jobset was updated</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DecreaseJobsetPriority(System.String)">
      <summary>
 Decrease the priority of all Jobs contained within the specified Jobset
 </summary>
      <param name="strName">Name of the Jobset to search for</param>
      <returns>Whether or not the Jobset was updated</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.DecreaseJobsetPriority(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DecreaseJobsetPriority(System.String,System.String)">
      <summary>
 Decrease the priority of all Jobs contained within the specified Jobset
 </summary>
      <param name="strFolderPath">Full folder path to search for the Jobset in</param>
      <param name="strName">Name of the Jobset to search for</param>
      <returns>Whether or not the Jobset was updated</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RenameJobset(System.String,System.String)">
      <summary>
 Rename an existing Jobset
 </summary>
      <param name="strOldName">Name of the Jobset to search for</param>
      <param name="strNewName">New name to give the Jobset</param>
      <returns>Whether or not the Jobset was successfully renamed</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strOldName" /> or <paramref name="strNewName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.RenameJobset(System.String,System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RenameJobset(System.String,System.String,System.String)">
      <summary>
 Rename an existing Jobset
 </summary>
      <param name="strFolderPath">Full folder path to search for the Jobset in</param>
      <param name="strOldName">Name of the Jobset to search for</param>
      <param name="strNewName">New name to give the Jobset</param>
      <returns>Whether or not the Jobset was successfully renamed</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewName" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strOldName" /> or <paramref name="strNewName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CopyJobset(System.String,System.String,System.Boolean)">
      <summary>
 Copy an exisiting Jobset from the root folder to a new Jobset in the root folder
 </summary>
      <param name="strSourceJobset">Name of the Jobset to copy</param>
      <param name="strNewJobset">Name to give the new Jobset</param>
      <returns>Whether or not the operation was successful</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewJobset" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strSourceJobset" /> or <paramref name="strNewJobset" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.CopyJobset(System.String,System.String,System.String,System.String,System.Boolean)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.CopyJobset(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
 Copy an exisiting Jobset to the specified folder
 </summary>
      <param name="strSourcePath">Full folder path of the Jobset Folder containing the original Jobset (empty for root)</param>
      <param name="strSourceJobset">Name of the Jobset to copy</param>
      <param name="strDestinationPath">Full folder path of the Jobset Folder to copy the original Jobset to (empty for root)</param>
      <param name="strNewJobset">Name to give the new Jobset</param>
      <param name="bCopyPermissions">Whether or not to copy any user access permissions (Connect 2 only)</param>
      <returns>Whether or not the operation was successful</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewJobset" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strSourceJobset" /> or <paramref name="strNewJobset" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJob(System.String,System.String,System.String,System.String,System.String[],System.String,System.String,System.Int64)">
      <summary>
 Create a new Job within the specified Jobset
 </summary>
      <param name="strJobsetName">Name of the Jobset to add to</param>
      <param name="strDatasetPath">Full folder path of the Dataset Folder containing the Dataset</param>
      <param name="strDatasetName">Name of the Dataset to use in PLEXOS simulations</param>
      <param name="strDatasetNameVersion">The specific Dataset Versiont to use for a PLEXOS simulation (empty for latest)</param>
      <param name="strArguments">List of arguments (in the format "'filename.xml' -m 'modelname'")</param>
      <param name="strEngine">Name of the PLEXOS Engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine, or the name of specific engine to use)</param>
      <param name="strClient">Name of the Client or Client Group to have the simulation be ran on (end with the character '|' to signal the name is a Client Group)</param>
      <param name="nPriority">Priority to set the job (zero for default, higher numbers have higher priority)</param>
      <returns>String representation of the index of the new Job (0 if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobsetName" /> or <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJob(System.String,System.String,System.String,System.String,System.String,System.String[],System.String,System.String,System.Int64,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJob(System.String,System.String,System.String,System.String,System.String,System.String[],System.String,System.String,System.Int64,System.String)">
      <summary>
 Create a new Job within the specified Jobset
 </summary>
      <param name="strJobsetPath">Full folder path of the Jobset Folder containing the Jobset</param>
      <param name="strJobsetName">Name of the Jobset to add to</param>
      <param name="strDatasetPath">Full folder path of the Dataset Folder containing the Dataset</param>
      <param name="strDatasetName">Name of the Dataset to use in PLEXOS simulations</param>
      <param name="strDatasetNameVersion">The specific Dataset Versiont to use for a PLEXOS simulation (empty for latest)</param>
      <param name="strArguments">List of arguments (in the format "'filename.xml' -m 'modelname'")</param>
      <param name="strEngine">Name of the PLEXOS Engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine, or the name of specific engine to use)</param>
      <param name="strClient">Name of the Client or Client Group to have the simulation be ran on (end with the character '|' to signal the name is a Client Group)</param>
      <param name="nPriority">Priority to set the job (zero for default, higher numbers have higher priority)</param>
      <param name="strTag">Any tag data to be saved in this job</param>
      <returns>String representation of the index of the new Job (0 if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobsetName" /> or <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="strTag" /> is not empty and the current Connect Server does not support specifing tagged data</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveJob(System.String)">
      <summary>
 Remove the specified Job
 </summary>
      <param name="strJobIndex">Job index to remove</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobs(System.String)">
      <summary>
 Gets all of the Jobs available in PLEXOS Connect for the specified Jobset
 </summary>
      <param name="strName">Name of the Jobset to search within</param>
      <returns>List of all Jobs found (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <remarks>This method is obsolete, please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobs(System.String,System.String)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobs(System.String,System.String)">
      <summary>
 Gets all of the Jobs available in PLEXOS Connect for the specified Jobset
 </summary>
      <param name="strFolderPath">Full folder path of the folder that contains the Jobset</param>
      <param name="strName">Name of the Jobset to search within</param>
      <returns>List of all Jobs found (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IncreaseJobPriority(System.String)">
      <summary>
 Increase the priority of the given job by 1
 </summary>
      <param name="strJobIndex">The job to increase its priority</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DecreaseJobPriority(System.String)">
      <summary>
 Decrease the priority of the given job by 1
 </summary>
      <param name="strJobIndex">The job to decrease its priority</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobDatasetFolder(System.String)">
      <summary>
 Retrieve the folder that the job's dataset is in
 </summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>Full folder path of the dataset's location</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobDataset(System.String)">
      <summary>
 Retrieve the dataset name from the specified job
 </summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>Name of the dataset</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobDatasetVersion(System.String)">
      <summary>
 Retrieve the dataset version from the specified job
 </summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>Name of dataset version</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobJobset(System.String)">
      <summary>Retrieve the name of the jobset from the specified job</summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>Name of the jobset</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobArguments(System.String)">
      <summary>Retrieve the list of arguments from the specified job</summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>List of arguments (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobEngine(System.String)">
      <summary>Retrieves the engine assigned to the specified job</summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>Name of the engine (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine, or the name of a specific engine)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobClient(System.String)">
      <summary>Retrieve the client or group assigned to the specified job</summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>Name of the Client or Client Group (empty for any Client and name ends with the character '|' to signal the name is a Client Group)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobPriority(System.String)">
      <summary>Retrieve the job priority from the specified job</summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>Priority of the job (Int32.max if priority is larger than Int32)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetJobTag(System.String)">
      <summary>Retrieve the job's tag data from the specified job index</summary>
      <param name="strJobIndex">Job index to search within</param>
      <returns>The tag data from the specified job</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
      <exception cref="T:System.NotSupportedException">The current Connect Server does not support specifing tagged data</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetJobDataset(System.String,System.String,System.String,System.String)">
      <summary>Set the dataset of the specified job</summary>
      <param name="strJobIndex">Index of the job to modify</param>
      <param name="strDatasetPath">Full folder path of the dataset</param>
      <param name="strDatasetName">Name of the dataset</param>
      <param name="strDatasetNameVersion">Optional : Version number</param>
      <returns>Whether or not the operation succeeded (also false if no change)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> or <paramref name="strDatasetName" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetJobArguments(System.String,System.String[])">
      <summary>Set the list of arguments for the specified job</summary>
      <param name="strJobIndex">Index of the job to modify</param>
      <param name="strArguments">List of arguments to set</param>
      <returns>Whether or not the operation succeeded (also false is no change)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters or <paramref name="strArguments" /> is null or contains zero elements</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetJobEngine(System.String,System.String)">
      <summary>Set the engine to use with the specified job</summary>
      <param name="strJobIndex">Index of the job to modify</param>
      <param name="strEngine">Name of the engine to use (empty for latest engine, 'x64'/'x86' for latest x64/x86 engine, or the name of specific engine to use)</param>
      <returns>Whether or not the operation succeeded (also false if no change)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetJobClient(System.String,System.String)">
      <summary>Set the client to use with the specified client</summary>
      <param name="strJobIndex">Index of the job to modify</param>
      <param name="strClient">Name of the Client or Client Group (empty for any Client or name ends with '|' to specify a Client Group instead of a Client)</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetJobPriority(System.String,System.Int32)">
      <summary>Set the priority of the specified job</summary>
      <param name="strJobIndex">Index of the job to modify</param>
      <param name="priority">New priority to give to the job</param>
      <returns>Whether or not the operation succeeded (also false if no change)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetJobTag(System.String,System.String)">
      <summary>Set the tag data of the specified job</summary>
      <param name="strJobIndex">Index of the job to modify</param>
      <param name="strTag">New tag value to give to the job</param>
      <returns>Whether or not the operation succeeded (also false if no change)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
      <exception cref="T:System.NotSupportedException">The current Connect Server does not support specifing tagged data</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRun(System.String)">
      <summary>
 Add a new run based on the provided Job
 </summary>
      <param name="strJobIndex">Job index to create the run from</param>
      <returns>Index of the new run (0 if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strJobIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strJobIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strJobIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRun(System.String,System.String,System.String,System.String[],System.String,System.String,System.String,System.Int32)">
      <summary>
 Creates a new run based on the inputted data
 </summary>
      <param name="strDatasetPath">Full folder path for the Dataset Folder that contains the Dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to use</param>
      <param name="strDatasetNameVersion">Name of the Dataset Version to use (empty for latest)</param>
      <param name="strArguments">List of arguments to execute the run with</param>
      <param name="strJobsetName">Name of the jobset to list the run as (empty for none, a job will not be created from this run)</param>
      <param name="strEngine">Which engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine or the name of specific engine to use)</param>
      <param name="strClient">Which client to use (empty for any client or name ends with '|' to specify a group instead of client)</param>
      <param name="nPriority">Priority of the new run</param>
      <returns>Index of the new run (0 if failed)</returns>
      <remarks>To support Jobset Folders, this overload is now obsolete. Please use <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRunEx(System.String,System.String,System.String,System.String[],System.String,System.String,System.String,System.String,System.Int32)" /></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strArguments" /> is null or contains zero elements</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRunEx(System.String,System.String,System.String,System.String[],System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
 Creates a new run based on the inputted data
 </summary>
      <param name="strDatasetPath">Full folder path for the Dataset Folder that contains the Dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to use</param>
      <param name="strDatasetNameVersion">Name of the Dataset Version to use (empty for latest)</param>
      <param name="strArguments">List of arguments to execute the run with</param>
      <param name="strJobsetPath">Full folder path for the Jobset Folder that contains the Jobset (empty for root folder)</param>
      <param name="strJobsetName">Name of the Jobset to list the run as (empty for none, a Job will not be created from this run)</param>
      <param name="strEngine">Which engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine or the name of specific engine to use)</param>
      <param name="strClient">Which client to use (empty for any client or name ends with '|' to specify a group instead of client)</param>
      <param name="nPriority">Priority of the new run</param>
      <returns>Index of the new run (0 if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strArguments" /> is null or contains zero elements</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRun(System.String,System.String[],System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
 Creates a new run using the specified folder.
 </summary>
      <param name="strSourcePath">Location of files on the local machine</param>
      <param name="strArguments">List of arguments to execute the run with</param>
      <param name="bSearchTop">Whether to search in top level directory or all sub folders</param>
      <param name="strJobsetName">Name of the Jobset to list the run as (empty for none, a Job will not be created from this run)</param>
      <param name="strDatasetPath">Full folder path for the Dataset Folder that contains the Dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to use</param>
      <param name="strEngine">Which engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine or the name of specific engine to use)</param>
      <param name="strClient">Which client to use (empty for any client or name ends with '|' to specify a group instead of client)</param>
      <param name="nPriority">Priority of the new run</param>
      <returns>Index of the new run (0 if failed)</returns>
      <remarks>To support Jobset Folders, this overload is now obsolete. Please use <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRunEx(System.String,System.String[],System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)" /></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strSourcePath" /> is null, empty (zero-length) or contains only whitespace characters or <paramref name="strArguments" /> is null or contains zero elements</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The folder <paramref name="strSourcePath" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRunEx(System.String,System.String[],System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
 Creates a new run using the specified folder.
 </summary>
      <param name="strSourcePath">Location of files on the local machine</param>
      <param name="strArguments">List of arguments to execute the run with</param>
      <param name="bSearchTop">Whether to search in top level directory or all sub folders</param>
      <param name="strJobsetPath">Full folder path for the Jobset Folder that contains the Jobset (empty for root folder)</param>
      <param name="strJobsetName">Name of the Jobset to list the run as (empty for none, a Job will not be created from this run)</param>
      <param name="strDatasetPath">Full folder path for the Dataset Folder that contains the Dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to use</param>
      <param name="strEngine">Which engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine or the name of specific engine to use)</param>
      <param name="strClient">Which client to use (empty for any client or name ends with '|' to specify a group instead of client)</param>
      <param name="nPriority">Priority of the new run</param>
      <returns>Index of the new run (0 if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strSourcePath" /> is null, empty (zero-length) or contains only whitespace characters or <paramref name="strArguments" /> is null or contains zero elements</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The folder <paramref name="strSourcePath" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.ReExecuteRun(System.String,System.String)">
      <summary>
 Submits a given run for re-execution. This will create a new run based on the parameters of the provided run.
 </summary>
      <param name="strRunIndex">Index of the run to re-execute</param>
      <param name="strEngine">Which engine to use (empty for the same engine as the provided run, 'x64'/'x86'/'linux' for latest x64/x86/linux engine or the name of specific engine to use)</param>
      <returns>Index of the new run (0 if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
      <exception cref="T:System.ApplicationException">The provided run was a quick run and the temporary files have been deleted.</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RestoreDeletedRun(System.String)">
      <summary>
 Restore a deleted run
 </summary>
      <param name="strRunIndex">Index of the deleted run to restore</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.RemoveRun(System.String)">
      <summary>
 Remove a run
 </summary>
      <param name="strRunIndex">Index of the run to delete</param>
      <returns>Whether or not is succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.ExpungeDeletedRun(System.String)">
      <summary>
 Permanently remove a deleted run, this cannot be undone.
 </summary>
      <param name="strRunIndex">Index of the deleted run to remove</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunIndexes(System.String,System.String)">
      <summary>
 Retrieve all the run indexes created between the 2 specified times
 </summary>
      <param name="strTimeFrom">Time to search from (use <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> or <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateFormat" /> for DateTime formatting)</param>
      <param name="strTimeTo">Time to search to (use <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> or <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateFormat" /> for DateTime formatting)</param>
      <returns>List of all run indexes between the 2 specified times (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strTimeFrom" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strTimeFrom" /> or <paramref name="strTimeTo" /> does not contain a date and time that corresponds to the pattern specified in <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> or <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateFormat" />.</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetDeletedRunIndexes(System.String,System.String)">
      <summary>
 Retrieve all the deleted run indexes created between the 2 specified times
 </summary>
      <param name="strTimeFrom">Time to search from (use <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> or <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateFormat" /> for DateTime formatting)</param>
      <param name="strTimeTo">Time to search to (use <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> or <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateFormat" /> for DateTime formatting)</param>
      <returns>List of all run indexes between the 2 specified times (null if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strTimeFrom" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strTimeFrom" /> or <paramref name="strTimeTo" /> does not contain a date and time that corresponds to the pattern specified in <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> or <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateFormat" />.</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunStatus(System.String)">
      <summary>
 Retrieve the status of the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Status of the run; <see cref="T:PLEXOS7_NET.Core.PLEXOSConnect.RunStatus" /> for result values</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunPriority(System.String)">
      <summary>
 Retrieve the priority of the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Priority of the run (Int32.max if priority is larger than Int32)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunTimeStamp(System.String)">
      <summary>
 Retrieve the date and time that the run was created
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Date and time that the run was created (see <see cref="P:PLEXOS7_NET.Core.PLEXOSConnect.strDateTimeFormat" /> for DateTime formatting)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunDatasetFolder(System.String)">
      <summary>
 Retrieve the full folder path of the run's dataset
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Full folder path of the dataset</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunDataset(System.String)">
      <summary>
 Retrieve the dataset name from the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Name of the run's dataset</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunDatasetVersion(System.String)">
      <summary>
 Retrive the dataset version name from the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Name of the run's dataset version</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunJobsetFolder(System.String)">
      <summary>
 Retrieve the full folder path of the run's Jobset
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Full folder path of the Jobset</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunJobset(System.String)">
      <summary>
 Retrieve the jobset name from the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Name of the run's jobset</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunArguments(System.String)">
      <summary>
 Retrive the run arguments from the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>List of arguments from the specified run</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunEngine(System.String)">
      <summary>
 Retrive the engine used from the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Name of the engine used by the run</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunClient(System.String)">
      <summary>
 Retrive the client used from the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Name of the client or group the run is set to run on</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunClientAssigned(System.String)">
      <summary>
 Retrive the preferred client used from the specified run
 </summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>Name of the preferred client to perform the run (empty for any client or name ends with '|' to specify a Client Group instead of a Client)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunAccount(System.String)">
      <summary>Retrieve the username of the account who created the specified run index</summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>The username from the specified run</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunTag(System.String)">
      <summary>Retrieve the run's tag data from the specified run index</summary>
      <param name="strRunIndex">Run index to search within</param>
      <returns>The tag data from the specified run</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
      <exception cref="T:System.NotSupportedException">The current Connect Server does not support specifing tagged data</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetRunProgress(System.String)">
      <summary>
 Get the current progress for the specified run
 </summary>
      <param name="strRunIndex">Index of the run to search for</param>
      <returns> The progress of the run, empty if not found or in the format "PROGRESS;[Phase];[Progress];[ModelName];[CurrentModel];[TotalModels];"</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.PauseRun(System.String)">
      <summary>
 Pause the specified run from executing, this will suspend the run after the its current execution step
 </summary>
      <param name="strRunIndex">Run index to pause</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
      <exception cref="T:System.NotSupportedException">This function is not supported when connected to a PLEXOS Connect 2 Server</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.StopRun(System.String)">
      <summary>
 Stop the specified run from executing
 </summary>
      <param name="strRunIndex">Run index to stop</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.ResumeRun(System.String)">
      <summary>
 Resume the specified run
 </summary>
      <param name="strRunIndex">Run index to resume</param>
      <returns>Whether or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.SetRunPriority(System.String,System.Int32)">
      <summary>
 Modify the priority of a given run
 </summary>
      <param name="strRunIndex">Run index to modify</param>
      <param name="nPriority">The new priority level for the given run</param>
      <returns>Weahter or not the operation succeeded</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsRunSuccessful(System.String)">
      <summary>
 Attempts to download a solution and if its found then the run is deemed to be successful
 </summary>
      <param name="strRunIndex">a string representing the run index</param>
      <returns>Whether or not the run was successful</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsRunComplete(System.String)">
      <summary>
 Checks the status of the run, returns true if the run has completed (either sucessfully completed or failed)
 </summary>
      <param name="strRunIndex">a string representing the run index</param>
      <returns>Whether or not the run has completed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsRunComplete(System.String,System.Int32)">
      <summary>
 Checks the status of the run, returns true if the run has completed (either sucessfully completed or failed)
 </summary>
      <param name="strRunIndex">a string representing the run index</param>
      <param name="nMillisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <returns>Whether or not the run has completed and/or failed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.IsRunComplete(System.String,System.Threading.CancellationToken)">
      <summary>
 Checks the status of the run, returns true if the run has completed (either sucessfully completed or failed)
 </summary>
      <param name="strRunIndex">a string representing the run index</param>
      <param name="CancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe</param>
      <returns>Whether or not the run has completed and/or failed</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.GetSplitRunStatus(System.String)">
      <summary>
 Check the status of the child split sections and report the their status
 </summary>
      <param name="strParentIndex">The index of the parent or master run for the split execution</param>
      <returns>Status of the run; <see cref="T:PLEXOS7_NET.Core.PLEXOSConnect.RunStatus" /> for result values</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strParentIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strParentIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strParentIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DownloadSolution(System.String,System.String)">
      <summary>
 Download the solution from the specified run to the specified destination
 </summary>
      <param name="strDestination">Download destination on the local machine</param>
      <param name="strRunIndex">Run index to get the solution from</param>
      <returns>Whether or not the download was successful</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.DownloadLog(System.String,System.String)">
      <summary>
 Download the solution from the specified run to the specified destination
 </summary>
      <param name="strDestination">Download folder on the local machine</param>
      <param name="strRunIndex">Run index to get the solution from</param>
      <returns>Whether or not the download was successful</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strRunIndex" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.FormatException">
        <paramref name="strRunIndex" /> is not in the correct format</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="strRunIndex" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" /></exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.MonitorRun(System.Int64,System.Action{System.String},System.Action)">
      <summary>
 Monitors a run in PLEXOS Connect
 </summary>
      <param name="nRun">Index of the run to monitor</param>
      <param name="onLog">Callback for Connect to pass the console output from the PLEXOS simulation</param>
      <param name="onComplete">Callback for when the run has finished</param>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.StopExecution(System.Int64)">
      <summary>
 Stop execution of a selected run
 </summary>
      <param name="nRunIndex">index of the run being stopped</param>
      <remarks>This method is obsolete, please use <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.StopRun(System.String)" /> instead.</remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.Execute(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
 Adds a new job to the specified Jobset and executes it
 </summary>
      <param name="strJobsetName">Name of the jobset to list the run as (empty for none, a job will not be created from this run)</param>
      <param name="strDatasetName">Name of the dataset to use</param>
      <param name="strDatasetNameVersion">Name of the Dataset Version to use (empty for latest)</param>
      <param name="strEngine">Which engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine or the name of specific engine to use)</param>
      <param name="strArguments">List of arguments to execute the run with</param>
      <param name="strClient">Which client to use (empty for any client or name ends with '|' to specify a group instead of client)</param>
      <returns>Index of the new run (0 if failed)</returns>
      <remarks>To support Jobset Folders, this function is now obsolete. Please use: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddJob(System.String,System.String,System.String,System.String,System.String,System.String[],System.String,System.String,System.Int64,System.String)" /> and <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRun(System.String)" /></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strArguments" /> is null or contains zero elements</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.QuickExecute(System.String,System.String,System.Int64,System.String,System.String,System.String)">
      <summary>
 Executes a job in PLEXOS Connect, based on the inputted parameters
 </summary>
      <param name="strJobsetName">Name of the jobset to list the run as (empty for none, a job will not be created from this run)</param>
      <param name="strDatasetName">Name of the Dataset to list the run under (if specified, it must exist)</param>
      <param name="nFile">File index of the uploaded temp files, see: <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.UploadTemp(System.String,System.String,System.String,System.IO.SearchOption)" /></param>
      <param name="strEngine">Which PELXOS Engine to use (empty for latest engine, 'x64'/'x86'/'linux' for latest x64/x86/linux engine or the name of specific engine to use)</param>
      <param name="strArgs">List of arguments to execute the run with</param>
      <param name="strClient">Which Client to use (empty for any Client or name ends with '|' to specify a Client Group instead of a Client)</param>
      <returns>Index of the newly created Run (0 if failed)</returns>
      <remarks>To support Jobset Folders, this function is now obsolete. Please use <see cref="M:PLEXOS7_NET.Core.PLEXOSConnect.AddRunEx(System.String,System.String[],System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)" /></remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.UploadTemp(System.String,System.String,System.String,System.IO.SearchOption)">
      <summary>
 Creates a new run using the specified folder.
 </summary>
      <param name="strSourcePath">Location of files on the local machine</param>
      <param name="strDatasetPath">Full folder path for the Dataset Folder that contains the Dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to use</param>
      <param name="oSearchOption">Whether to search in top level directory or all sub folders</param>
      <returns>Index of the new run (0 if failed)</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strSourcePath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The folder <paramref name="strSourcePath" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.UploadDataSet(System.String,System.String,System.String,System.String,System.IO.SearchOption,System.Boolean)">
      <summary>
 Uploads a new dataset with the specific version
 </summary>
      <param name="strSourcePath">Location of files on the local machine</param>
      <param name="strDatasetPath">Full folder path of the dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to modify</param>
      <param name="strNewVersion">Name to give the new version</param>
      <param name="oSearchOption">Whether to search in top level directory or all sub folders</param>
      <param name="bIgnoreBaseVersion">Whether or not to link the new version with the latest possible version</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewVersion" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" />, <paramref name="strNewVersion" /> or <paramref name="strSourcePath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The folder <paramref name="strSourcePath" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.PLEXOSConnect.UploadDataSetAlways(System.String,System.String,System.String,System.String,System.IO.SearchOption,System.Boolean)">
      <summary>
 Uploads a new dataset with specific version (always uploads files regardless of what is in the base version)
 </summary>
      <param name="strSourcePath">Location of files on the local machine</param>
      <param name="strDatasetPath">Full folder path of the dataset (empty for root folder)</param>
      <param name="strDatasetName">Name of the dataset to modify</param>
      <param name="strNewVersion">Name to give the new version</param>
      <param name="oSearchOption">Whether to search in top level directory or all sub folders</param>
      <param name="bIgnoreBaseVersion">Whether or not to link the new version with the latest possible version</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="strNewVersion" /> contains invalid characters</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strDatasetName" />, <paramref name="strNewVersion" /> or <paramref name="strSourcePath" /> is null, empty (zero-length) or contains only whitespace characters</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The folder <paramref name="strSourcePath" /> does not exist, the path is invalid or the caller does not have permission to access the directory</exception>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.Connection(System.String)">
      <summary>
 Connection 
 - takes a string that points to the zip file and establishes a connection with the dataset
 - the dataset and solution file are unzipped to a local directory and loaded 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.Close">
      <summary>
 CloseConnection - this really just cleans up the datafiles used in the query function
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.CollectionName2Id(System.String,System.String,System.String)">
      <summary>
 Gets the collection_id associated with the named collection
 </summary>
      <param name="strParentClassName">
      </param>
      <param name="strChildClassName">
      </param>
      <param name="strCollectionName">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.ObjectId2Name(System.Int32)">
      <summary>
 Returns the name of the object with the specified object_id
 </summary>
      <param name="ObjectId">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.ObjectName2Id(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 Returns the unique object_id associated with the given object class and name.
 </summary>
      <param name="ClassId">
      </param>
      <param name="Name">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetObjects(EEUTILITY.Enums.ClassEnum)">
      <summary>
 Returns a list of objects of a given class type
 </summary>
      <param name="nClassId">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetObjectsInCategory(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 Gets a list of all objects of a particular class in a cateogry (excluding the default)
 </summary>
      <param name="nClassId">The class enum</param>
      <param name="strCategory">The name of the category</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetCategories(EEUTILITY.Enums.ClassEnum)">
      <summary>
 Gets a list of all cateogries of a particular class (excluding the default)
 </summary>
      <param name="nClassId">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetReportedProperties">
      <summary>
 Returns set of properties names reported in the dataset
 </summary>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.CategoryExists(EEUTILITY.Enums.ClassEnum,System.String)">
      <summary>
 Checks to see if a category exists in the input database
 </summary>
      <param name="nClassId">The class enum</param>
      <param name="strCategory">The name of the category</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetMemberships(EEUTILITY.Enums.CollectionEnum)">
      <summary>
 Returns a list of memberships of a given collection
 </summary>
      <param name="nCollectionId">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetChildMembers(EEUTILITY.Enums.CollectionEnum,System.String)">
      <summary>
 Gets a list of all child objects associated with a particular collection
 </summary>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetParentMembers(EEUTILITY.Enums.CollectionEnum,System.String)">
      <summary>
 Gets a list of all parent objects associated with a particular collection
 </summary>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.PropertyName2EnumId(System.String,System.String,System.String,System.String)">
      <summary>
 Gets the enum_id associated with the named property
 </summary>
      <param name="strParentClassName">
      </param>
      <param name="strChildClassName">
      </param>
      <param name="strCollectionName">
      </param>
      <param name="strPropertyName">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.PropertyName2Id(System.String,System.String,System.String,System.String)">
      <summary>
 Gets the enum_id associated with the named property
 </summary>
      <param name="strParentClassName">
      </param>
      <param name="strChildClassName">
      </param>
      <param name="strCollectionName">
      </param>
      <param name="strPropertyName">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.PropertyDetails(System.String,System.String,System.String,System.String[]@,System.Int32[]@)">
      <summary>
 Gets the names and enum's of all properties associated with the named class
 </summary>
      <param name="strParentClassName">
      </param>
      <param name="strChildClassName">
      </param>
      <param name="strCollectionName">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetTimeSlices">
      <summary>
 Gets a recordset of all timeslices in the current solution database
 </summary>
      <returns>An ADODB.recordset containing the timeslice_id and name of all timeslices</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetTimeSlicesToDataTable">
      <summary>
 Gets a DataTable of all timeslices in the current solution databse
 </summary>
      <returns>A DataTable containing the timeslice_id and name of all timeslices</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.TimeSliceName2Id(System.String)">
      <summary>
 Converts a timeslice name into the ID, to be used with the Query functions
 </summary>
      <param name="strTimeSliceName">The name of the Timeslice to lookup</param>
      <returns>-1 if no timeslice of that name is found</returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetSamples">
      <summary>
 Gets a recordset of all samples in the current solution database
 </summary>
      <returns>An ADODB.recordset containing the sample_id and name of all samples</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetSamplesToDataTable">
      <summary>
 Gets a DataTable of all samples in the current solution databse
 </summary>
      <returns>A DataTable containing the sample_id and name of all samples</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.SampleName2Id(System.String)">
      <summary>
 Converts a sample name into the ID, to be used with the Query functions
 </summary>
      <param name="strSampleName">The name of the sample to lookup</param>
      <returns>Integer.MinValue (-2147483648) if no sample of that name is found</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetModels">
      <summary>
 Gets an array of all model names in the current solution database
 </summary>
      <returns>A String array of all model names</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.SetSelectedColumns(System.String[]@)">
      <summary>
 Specify the columns to be return from query 
 </summary>
      <param name="columns">columns to be returned from query</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetSelectedColumns">
      <summary>
 Get the list of selected columns 
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.CleanSelectedColumns">
      <summary>
 Clean the the columns selection filter
 </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.Query(EEUTILITY.Enums.SimulationPhaseEnum,EEUTILITY.Enums.CollectionEnum,System.String,System.String,EEUTILITY.Enums.PeriodEnum,EEUTILITY.Enums.SeriesTypeEnum,System.String,System.Object,System.Object,System.String,System.String,System.String,EEUTILITY.Enums.AggregationEnum,System.String,System.String)">
      <summary>
 Query
 </summary>
      <param name="SimulationPhaseId">
      </param>
      <param name="CollectionId">
      </param>
      <param name="ParentName">
      </param>
      <param name="ChildName">
      </param>
      <param name="PeriodTypeId">
      </param>
      <param name="SeriesTypeId">
      </param>
      <param name="PropertyList">
      </param>
      <param name="DateFrom">
      </param>
      <param name="DateTo">
      </param>
      <param name="TimesliceList">
      </param>
      <param name="SampleList">
      </param>
      <param name="Filter">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.QueryToList(EEUTILITY.Enums.SimulationPhaseEnum,EEUTILITY.Enums.CollectionEnum,System.String,System.String,EEUTILITY.Enums.PeriodEnum,EEUTILITY.Enums.SeriesTypeEnum,System.String,System.Object,System.Object,System.String,System.String,System.String,EEUTILITY.Enums.AggregationEnum,System.String,System.String)">
      <summary>
 QueryToList
 </summary>
      <param name="SimulationPhaseId">
      </param>
      <param name="CollectionId">
      </param>
      <param name="ParentName">
      </param>
      <param name="ChildName">
      </param>
      <param name="PeriodTypeId">
      </param>
      <param name="SeriesTypeId">
      </param>
      <param name="PropertyList">
      </param>
      <param name="DateFrom">
      </param>
      <param name="DateTo">
      </param>
      <param name="TimesliceList">
      </param>
      <param name="SampleList">
      </param>
      <param name="Filter">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.QueryToCSV(System.String,System.Boolean,EEUTILITY.Enums.SimulationPhaseEnum,EEUTILITY.Enums.CollectionEnum,System.String,System.String,EEUTILITY.Enums.PeriodEnum,EEUTILITY.Enums.SeriesTypeEnum,System.String,System.Object,System.Object,System.String,System.String,System.String,EEUTILITY.Enums.AggregationEnum,System.String,System.String)">
      <summary>
 QueryToCSV
 </summary>
      <param name="strCSVFile">
      </param>
      <param name="bAppendToFile">
      </param>
      <param name="SimulationPhaseId">
      </param>
      <param name="CollectionId">
      </param>
      <param name="ParentName">
      </param>
      <param name="ChildName">
      </param>
      <param name="PeriodTypeId">
      </param>
      <param name="SeriesTypeId">
      </param>
      <param name="PropertyList">
      </param>
      <param name="DateFrom">
      </param>
      <param name="DateTo">
      </param>
      <param name="TimesliceList">
      </param>
      <param name="SampleList">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.GetData(System.String,System.String[]@)">
      <summary>
 GetData - get the data of the specified data table (in recordset form)
 </summary>
      <param name="TableName">
      </param>
      <param name="strFields">
      </param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.UpdatePSSERawFromSolution(System.String,System.String,System.Object)">
      <summary>
 Update a PSSE Raw file with data from a PLEXOS solution for a given period
 </summary>
      <param name="strPSSERawFile">Full path and filename of the PSSE .raw file to be updated</param>
      <param name="strOutputFile">Filename for the new, updated PSSE .raw file</param>
      <param name="oDateTime">The period which will be used for populating the .raw file</param>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.AddReportingProperty(EEUTILITY.Enums.CollectionEnum,System.String,System.String,System.String,System.String)">
      <summary>
 Adds a custom reporting property to the solution database
 </summary>
      <param name="nCollectionId">The collection type the new reporting property will belong to</param>
      <param name="strPropertyName">The name of the new reporting property</param>
      <param name="strUnit">The units the new reporting property will be reported in</param>
      <param name="strSummaryName">The summary name of the new reporting property</param>
      <param name="strSummaryUnit">The summary units the new reporting property will be reported in</param>
      <returns>The enum id of the new reporting property</returns>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.AddReportingUnit(System.String)">
      <summary>
 Defines a new unit type for reporting
 </summary>
      <param name="strUnit">The name of the new unit type</param>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.AddReportingData(System.Double[],EEUTILITY.Enums.PeriodEnum,EEUTILITY.Enums.CollectionEnum,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,EEUTILITY.Enums.SimulationPhaseEnum)">
      <summary>
 Add Custom Reporting Data to the Solution Database
 </summary>
      <param name="ResultData">The Data to be added to the Solution DB</param>
      <param name="PeriodType">The Period Type Enum</param>
      <param name="CollectionId">The collection type the new reporting property will belong to</param>
      <param name="ParentName">
      </param>
      <param name="ChildName">
      </param>
      <param name="ModelName">The name of the Model</param>
      <param name="PropertyId">The Id of the Property</param>
      <param name="BandId">The Band Id</param>
      <param name="SampleName">The name of the Sample e.g. 'Mean'</param>
      <param name="TimeSliceName">The name of the TimeSlice e.g. 'All Period'</param>
    </member>
    <member name="M:PLEXOS7_NET.Core.Solution.Commit">
      <summary>
 Write changes to the Solution Database Zip file
 </summary>
    </member>
  </members>
</doc>